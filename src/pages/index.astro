---
import { getCollection } from "astro:content";
import { Image } from "astro:assets";

import Layout from "@/layouts/Layout.astro";
import PostCard from "@/components/PostCard.astro";
import ProjectCard from "@/components/ProjectCard.astro";
import Link from "@/components/shared/Link.astro";
import convertAsteriskToStrongTag from "@/utils/convertAsteriskToStrongTag";

import presentation from "@/data/presentation";
import projects from "@/data/projects";
import Footer from "@/components/Footer.astro";
import IconCV from "@/components/IconCV.astro";
import Timeline from "@/components/Timeline.astro";
import IconPJ from "@/components/IconPJ.astro";
import IconXP from "@/components/IconXP.astro";
import IconBG from "@/components/IconBG.astro";

const posts = (await getCollection("posts")).sort(function (first, second) {
  return second.data.publishedAt.getTime() - first.data.publishedAt.getTime();
});
---

<Layout>
  <main class="flex flex-col gap-20">
    <article
      class="flex flex-col gap-8 md:flex-row-reverse md:justify-between md:gap-12"
    >
      {
        presentation.profile && (
          <Image
            src={presentation.profile}
            class="w-[40%] md:w-[25%] self-center rounded-full border-2 border-[#ffffff12]"
            alt="Your Profile"
            width="200"
            height="200"
          />
        )
      }

      <div class="flex flex-col gap-8 md:items-start items-center">
        <h1 class="text-2xl md:text-3xl text-neutral-100">
          {presentation.title}
        </h1>

        <h2
          class="w-auto max-w-[60ch] md:text-left text-center leading-6"
          set:html={convertAsteriskToStrongTag(presentation.description)}
        />
        <div class="flex items-center justify-center">
          <a
            href={presentation.cv}
            download=""
            class="text-white bg-blue-800 flex items-center hover:bg-blue-900 font-medium rounded-lg text-sm px-5 py-2.5 me-2 dark:bg-[#1f407b]"
            ><span><IconCV /></span>Download CV</a
          >
          <div
            class="-ml-2 flex self-center justify-center bottom-0 bg-base-200"
          >
            {
              presentation.contact.map((social, index) => (
                <>
                  <Link href={social.link} label={social.label} />
                </>
              ))
            }
          </div>
        </div>
      </div>
    </article>
    <article class="flex flex-col gap-8">
      <header class="flex w-full flex-row justify-between gap-2">
        <h3 class="text-xl flex gap-2 items-center text-neutral-100">
          Experience <IconXP />
        </h3>
      </header>
      <ol class="relative border-s border-gray-200 ml-9 dark:border-gray-700">
        <Timeline title="Backend Developer" date="February 20 - June, 2023">
          Work with Python, using Frameworks like Django and FastAPI for the
          creation of an Eccomerce. Using base of data like MySQL and MongoDB.
        </Timeline>
        <Timeline
          title="Frontend Web Developer"
          date="March 24 - November, 2022"
        >
          Work on the development of a Web of administration of inventory. Use
          languages like JavaScript and Frameworks like React. EndPoints for a
          data base believes where you drove and created users.
        </Timeline>
      </ol>
    </article>
    <article class="flex flex-col gap-8">
      <header class="flex w-full flex-row justify-between gap-2">
        <h3 class="text-xl flex gap-2 items-center text-neutral-100">
          Projects ({projects.length}) <IconPJ />
        </h3>
      </header>
      {projects.length === 0 && <p>Oops, I must work...</p>}

      <section class="flex flex-col gap-4">
        {
          projects.length !== 0 &&
            projects.map((project) => <ProjectCard {...project} />)
        }
      </section>
    </article>
    <article class="flex flex-col gap-8">
      <header class="flex w-full flex-row justify-between gap-2">
        <h3 class="text-xl flex gap-3 items-center text-neutral-100">
          Latest posts <IconBG />
        </h3>
        <Link href="/posts" label="See all posts" isUnderline target="_self" />
      </header>
      {posts.length === 0 && <p>Soon, stay connected ðŸ‘€...</p>}

      <section class="flex gap-4 flex-col md:flex-nowrap">
        {
          posts.length !== 0 &&
            posts
              .slice(0, 2)
              .map((post) => (
                <PostCard
                  publishedAt={post.data.publishedAt}
                  title={post.data.title}
                  description={post.data.description}
                  slug={post.slug}
                />
              ))
        }
      </section>
    </article>

    <Footer />
  </main>
</Layout>
